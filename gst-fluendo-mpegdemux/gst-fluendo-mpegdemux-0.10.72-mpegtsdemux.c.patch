--- gst-fluendo-mpegdemux-0.10.72/src/gstmpegtsdemux.c.orig	2013-02-12 04:01:37.000000000 -0800
+++ gst-fluendo-mpegdemux-0.10.72/src/gstmpegtsdemux.c	2014-04-27 22:57:57.869321100 -0700
@@ -84,7 +84,8 @@ enum
   PROP_MAX_PES_BUFFER_SIZE,
   PROP_FORCE_PCR_SEGMENT,
   PROP_PCR_DIFFERENCE,
-  PROP_PTS_OFFSET
+  PROP_PTS_OFFSET,
+  PROP_VBR_DURATION
 };
 
 #define GSTTIME_TO_BYTES(time) \
@@ -326,6 +327,11 @@ gst_fluts_demux_class_init (GstFluTSDemu
           "Initial PTS offset for timestamps",
           0, G_MAXUINT64, DEFAULT_PTS_OFFSET, G_PARAM_READWRITE));
 
+	g_object_class_install_property (gobject_class, PROP_VBR_DURATION,
+      g_param_spec_uint64 ("duration", "Initial duration",
+          "for seek event",
+          0, G_MAXUINT64, 0, G_PARAM_READWRITE));
+
   gstelement_class->change_state = gst_fluts_demux_change_state;
 #ifdef HAVE_LATENCY
   gstelement_class->provide_clock = gst_fluts_demux_provide_clock;
@@ -3205,8 +3211,24 @@ gst_fluts_demux_handle_seek_push (GstFlu
 
   GST_DEBUG_OBJECT (demux, "try with bitrate");
 
+	#if 0
   bstart = GSTTIME_TO_BYTES (start);
   bstop = GSTTIME_TO_BYTES (stop);
+	#else
+	if(start != -1){
+		bstart = demux->filelength * start / demux->privateduration;
+	}
+	else {
+		bstart = -1;
+	}
+		
+	if(stop != -1) {
+		bstop = demux->filelength * stop / demux->privateduration;
+	}
+	else {
+		bstop = -1;
+	}
+	#endif
 
   GST_DEBUG_OBJECT (demux, "in bytes bstart %" G_GINT64_FORMAT " bstop %"
       G_GINT64_FORMAT, bstart, bstop);
@@ -3375,6 +3397,7 @@ gst_fluts_demux_sink_event (GstPad * pad
         GST_INFO_OBJECT (demux, "received new segment: rate %g "
             "format %d, start: %" G_GINT64_FORMAT ", stop: %" G_GINT64_FORMAT
             ", time: %" G_GINT64_FORMAT, rate, format, start, stop, time);
+				demux->filelength = stop;
       }
       /* For BYTES newsegment we just store the estimated position in time
        * format. The demuxer will figure out the start and stop values from
@@ -3997,6 +4020,9 @@ gst_fluts_demux_set_property (GObject *
     case PROP_PTS_OFFSET:
       demux->pts_offset = g_value_get_uint64 (value);
       break;
+		case PROP_VBR_DURATION:
+			demux->privateduration = g_value_get_uint64(value);
+			break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
